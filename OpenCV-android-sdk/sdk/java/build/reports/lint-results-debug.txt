C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\utils\PermisstionUtil.java:73: Warning: This method should be annotated with @ChecksSdkIntAtLeast(api=Build.VERSION_CODES.M) [AnnotateVersionCheck]
 public static boolean checkSDK() {
                       ~~~~~~~~

   Explanation for issues of type "AnnotateVersionCheck":
   Methods which perform SDK_INT version checks (or field constants which
   reflect the result of a version check) in libraries should be annotated
   with @ChecksSdkIntAtLeast. This makes it possible for lint to correctly
   check calls into the library later to correctly understand that problematic
   code which is wrapped within a call into this library is safe after all.

C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\CameraGLSurfaceView.java:48: Warning: By convention, the custom view (CameraGLSurfaceView) and the declare-styleable (CameraBridgeViewBase) should have the same name (various editor features rely on this convention) [CustomViewStyleable]
        TypedArray styledAttrs = getContext().obtainStyledAttributes(attrs, R.styleable.CameraBridgeViewBase);
                                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "CustomViewStyleable":
   The convention for custom views is to use a declare-styleable whose name
   matches the custom view class name. The IDE relies on this convention such
   that for example code completion can be offered for attributes in a custom
   view in layout XML resource files.

   (Similarly, layout parameter classes should use the suffix _Layout.)

C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\utils\PermisstionUtil.java:63: Warning: Field requires API level 33 (current min is 26): android.Manifest.permission#READ_MEDIA_IMAGES [InlinedApi]
 public static String[] PERMISSIONS_STORAGE_CAMERA_MEDIA = {Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE,Manifest.permission.CAMERA,Manifest.permission.READ_MEDIA_IMAGES};
                                                                                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "InlinedApi":
   This check scans through all the Android API field references in the
   application and flags certain constants, such as static final integers and
   Strings, which were introduced in later versions. These will actually be
   copied into the class files rather than being referenced, which means that
   the value is available even when running on older devices. In some cases
   that's fine, and in other cases it can result in a runtime crash or
   incorrect behavior. It depends on the context, so consider the code
   carefully and decide whether it's safe and can be suppressed or whether the
   code needs to be guarded.

   If you really want to use this API and don't need to support older devices
   just set the minSdkVersion in your build.gradle or AndroidManifest.xml
   files.

   If your code is deliberately accessing newer APIs, and you have ensured
   (e.g. with conditional execution) that this code will only ever be called
   on a supported platform, then you can annotate your class or method with
   the @TargetApi annotation specifying the local minimum SDK to apply, such
   as @TargetApi(11), such that this check considers 11 rather than your
   manifest file's minimum SDK as the required API level.

C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\Camera2Renderer.java:22: Warning: Unnecessary; SDK_INT is always >= 21 [ObsoleteSdkInt]
@TargetApi(21)
~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\CameraActivity.java:40: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\CameraActivity.java:52: Warning: Unnecessary; SDK_INT is always >= 23 [ObsoleteSdkInt]
    @TargetApi(Build.VERSION_CODES.M)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\CameraGLRendererBase.java:20: Warning: Unnecessary; SDK_INT is always >= 15 [ObsoleteSdkInt]
@TargetApi(15)
~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\CameraGLSurfaceView.java:52: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
        if(android.os.Build.VERSION.SDK_INT >= 21)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\CameraRenderer.java:12: Warning: Unnecessary; SDK_INT is always >= 15 [ObsoleteSdkInt]
@TargetApi(15)
~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\CameraRenderer.java:49: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
            if(mCamera == null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\CameraRenderer.java:63: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\JavaCamera2View.java:45: Warning: Unnecessary; SDK_INT is always >= 21 [ObsoleteSdkInt]
@TargetApi(21)
~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\JavaCameraView.java:93: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\JavaCameraView.java:168: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH && !android.os.Build.MODEL.equals("GT-I9100"))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\android\JavaCameraView.java:217: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\utils\PermisstionUtil.java:36: Warning: Unnecessary; SDK_INT is always >= 23 [ObsoleteSdkInt]
@TargetApi(Build.VERSION_CODES.M)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\utils\PermisstionUtil.java:74: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
  return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\utils\PermisstionUtil.java:169: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
  if (Build.VERSION.SDK_INT >= 23) {
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\utils\PermisstionUtil.java:463: Warning: Unnecessary; SDK_INT is always >= 23 from outer annotation (@TargetApi(23)) [ObsoleteSdkInt]
 @RequiresApi(api = Build.VERSION_CODES.KITKAT)
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dmy22\AndroidStudioProjects\ImageReconizer\OpenCV-android-sdk\sdk\java\src\org\opencv\utils\PermisstionUtil.java:467: Warning: Unnecessary; SDK_INT is always >= 26 [ObsoleteSdkInt]
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

0 errors, 20 warnings
